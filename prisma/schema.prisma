generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum StoryPostContentType {
  MEDIA
  LINK
  GROUP
}

enum StoryPostContentDisplayMethod {
  CROP
  CONTAIN
}

model StoryPost {
  id String @id

  title   String
  caption String

  groups StoryPostGroup[]
  tags   StoryPostTag[]

  contentType StoryPostContentType

  // Link type
  contentLink String?

  // Media type
  contentMediaId      String?
  contentMedia        Media?                        @relation(fields: [contentMediaId], references: [id])
  contentMediaDisplay StoryPostContentDisplayMethod

  // Group type
  contentGroupId String?
  contentGroup   StoryGroup? @relation("storyContentGroup", fields: [contentGroupId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model StoryPostTag {
  id      String    @id
  story   StoryPost @relation(fields: [storyId], references: [id])
  tag     StoryTags @relation(fields: [tagId], references: [id])
  storyId String
  tagId   String
}

model StoryTags {
  id          String         @id
  title       String
  description String
  stories     StoryPostTag[]
}

model StoryPostGroup {
  id      String     @id
  story   StoryPost  @relation(fields: [storyId], references: [id])
  group   StoryGroup @relation(fields: [groupId], references: [id])
  storyId String
  groupId String
}

model StoryGroup {
  id String @id

  title       String
  description String

  stories         StoryPostGroup[]
  storyReferences StoryPost[]      @relation("storyContentGroup")
}

enum MediaType {
  VIDEO
  PHOTO
}

model Media {
  id   String    @id
  type MediaType

  source String
  thumb  String?
  lq     String?
  hq     String?

  // Describes the source
  width  Int   @default(0)
  height Int   @default(0)
  length Float @default(0)

  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now())
  StoryPost StoryPost[]
}
